{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GlobeTalk \u2014 Virtual Pen Pals \ud83c\udf0d\u2709\ufe0f","text":"<p>GlobeTalk is a privacy-first, anonymous pen-pal platform that connects people around the world for friendly, cultural, asynchronous \u201cletter\u201d exchanges. It recreates the charm of postal pen pals using modern web tech: random matchmaking, delayed message delivery, short cultural profiles, and moderation \u2014 text-only and anonymous by design.</p> <p> </p>"},{"location":"#table-of-contents","title":"Table of contents","text":"<ol> <li>Quick summary</li> <li>Features </li> <li>Tech stack </li> <li>Architecture &amp; data model </li> <li>API endpoints </li> <li>Local setup &amp; development </li> <li>Testing &amp; CI </li> <li>Sprint 1 deliverables </li> <li>Privacy, safety &amp; moderation </li> <li>Contributing </li> <li>Contact &amp; support </li> <li>License</li> </ol>"},{"location":"#quick-summary","title":"Quick summary","text":"<ul> <li>Purpose: Help users make anonymous, cross-cultural connections via delayed text letters.  </li> <li>Key constraints: Text-only (no file/media), anonymous (no names/emails published), moderation/reporting, OAuth-based sign-in for account protection.  </li> <li>Target users: Curious learners, language learners, students, and anyone seeking low-pressure cultural exchange.</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Random Matchmaking \u2014 pair users globally with optional filters (language, region/time-zone).  </li> <li>Asynchronous Messaging \u2014 write a \u201cletter\u201d, schedule a delivery delay (e.g., 12 hours).  </li> <li>Cultural Profiles \u2014 short, anonymous fields (age range, hobbies, region, languages).  </li> <li>Inbox / Compose \u2014 thread-based UI for reading and writing letters.  </li> <li>Moderation \u2014 reporting, moderation logs, blocking.  </li> <li>Settings &amp; Safety \u2014 block/report, toggle match preferences, delete account.</li> </ul>"},{"location":"#tech-stack","title":"Tech stack","text":"<p>Frontend - Next.js - Modern UI Library with hooks and context - Tailwind CSS  - Utility-first CSS framework - React Query or Context API</p> <p>Backend - Next.js API routes - Firebase - Backend-as-a-Service Platform     - Firebase Auth - Authentication service     - Firestore - NoSQL document database</p> <p>Development Infrastructure - GitHub for version control - GitHub Actions for CI (test.yml)     - Jest for unit testing     - Codecov for Code Coverage - Hosting: Netlify (One-click deployment) - Secrets &amp; Environment management: Github Secrets &amp; Netlify Environment Variables - Docs site: GitHub Pages (MkDocs)</p>"},{"location":"#architecture-data-model","title":"Architecture &amp; data model","text":""},{"location":"#high-level-components","title":"High-level components","text":"<ul> <li>Frontend (Next) \u2014 UI, auth redirect, profile flow  </li> <li>Backend API \u2014 matchmaking, messaging, moderation  </li> <li>Database \u2014 persistent storage for users, matches, messages, logs  </li> <li>Worker / Scheduler \u2014 processes delayed deliveries</li> </ul>"},{"location":"#minimal-db-schema-nosql","title":"Minimal DB schema (NoSQL)","text":"<pre><code>users\n{\n  \"uid\": \"uid_abc123\",\n  \"anonId\": \"G-42a7\",\n  \"createdAt\": \"&lt;Firestore Timestamp&gt;\",\n  \"lastSeenAt\": \"&lt;Firestore Timestamp&gt;\",\n  \"authProvider\": \"google\",\n  \"settings\": {\n    \"receiveEmail\": false\n  }\n}\n\nprofiles\n{\n  \"anonId\": \"G-42a7\",\n  \"ownerUid\": \"uid_abc123\",\n  \"region\": \"South Africa\",\n  \"languages\": [\"English\",\"Zulu\"],\n  \"hobbies\": [\"music\",\"soccer\"],\n  \"bio\": \"22-28 \u2022 interested in culture &amp; language exchange\",\n  \"createdAt\": \"&lt;Firestore Timestamp&gt;\"\n}\n\nmatches\n{\n  \"id\": \"match_ab12\",\n  \"userA\": \"uid_abc123\",\n  \"userB\": \"uid_def456\",\n  \"matchedAt\": \"&lt;Firestore Timestamp&gt;\",\n  \"longTerm\": false,\n  \"state\": \"active\"\n}\n\nmessages\n{\n  \"id\": \"msg_x001\",\n  \"senderId\": \"uid_abc123\",\n  \"body\": \"Hello from South Africa! What are your local holidays like?\",\n  \"createdAt\": \"&lt;Firestore Timestamp&gt;\",\n  \"deliveryTime\": \"&lt;Firestore Timestamp&gt;\",\n  \"delivered\": false,\n  \"deliveredAt\": null,\n  \"flagged\": 0\n}\n\nmoderation logs\n{\n  \"id\": \"report_0001\",\n  \"reporterId\": \"uid_xyz789\",\n  \"messageRef\": \"/matches/match_ab12/messages/msg_x001\",\n  \"reason\": \"abusive language\",\n  \"status\": \"pending\",\n  \"createdAt\": \"&lt;Firestore Timestamp&gt;\",\n  \"handledBy\": null,\n  \"actionTaken\": null\n}\n</code></pre>"},{"location":"#api-endpoints","title":"API Endpoints","text":"<p>See docs/api.md for full request/response examples.</p>"},{"location":"#auth","title":"Auth","text":"<ul> <li><code>GET /auth/oauth/login</code> \u2014 Redirect user to OAuth provider.</li> <li><code>POST /auth/oauth/callback</code> \u2014 Exchange provider code for app JWT.</li> </ul>"},{"location":"#profiles","title":"Profiles","text":"<ul> <li><code>POST /profiles</code> \u2014 Create or update a profile.</li> <li><code>GET /profiles/:anonId</code> \u2014 Retrieve a profile by public anon ID.</li> </ul>"},{"location":"#matchmaking","title":"Matchmaking","text":"<ul> <li><code>POST /match</code> \u2014 Request a new match (with optional filters).</li> <li><code>GET /matches</code> \u2014 List active matches for the current user.</li> </ul>"},{"location":"#messaging","title":"Messaging","text":"<ul> <li><code>POST /messages</code> \u2014 Write a letter (delayed delivery).  </li> <li><code>GET /messages/:matchId</code> \u2014 Get delivered messages for a match.</li> </ul>"},{"location":"#moderation","title":"Moderation","text":"<ul> <li><code>POST /moderation/report</code> \u2014 Report a message.  </li> <li><code>GET /moderation/reports</code> \u2014 Moderator-only list of reports.  </li> <li><code>POST /admin/moderation/:reportId/action</code> \u2014 Moderator resolves report.  </li> <li><code>DELETE /users/:uid</code> \u2014 Delete user account (self or admin).</li> </ul>"},{"location":"#local-setup-development","title":"Local Setup &amp; Development","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Node.js 18+  </li> <li>npm / pnpm / yarn  </li> <li>Firebase project (Auth + Firestore enabled)  </li> <li>Netlify</li> </ul>"},{"location":"#envlocal","title":"<code>.env.local</code>","text":"<pre><code>NEXT_PUBLIC_API_URL=http://localhost:3000\nFIREBASE_API_KEY=xxxx\nFIREBASE_AUTH_DOMAIN=xxxx.firebaseapp.com\nFIREBASE_PROJECT_ID=xxxx\nFIREBASE_STORAGE_BUCKET=xxxx.appspot.com\nFIREBASE_MESSAGING_SENDER_ID=xxxx\nFIREBASE_APP_ID=xxxx\n</code></pre>"},{"location":"#install-dependencies","title":"Install dependencies","text":"<pre><code>npm install\n</code></pre>"},{"location":"#run-locally","title":"Run locally","text":"<pre><code>npm run dev\n</code></pre>"},{"location":"#build-for-production","title":"Build for production","text":"<pre><code>npm run build\n</code></pre>"},{"location":"#run-tests","title":"Run tests","text":"<pre><code>npm test\n</code></pre>"},{"location":"#testing-ci","title":"Testing &amp; CI","text":"<ul> <li>Jest for unit and integration tests</li> <li>Testing Library for React component tests</li> <li>GitHub Actions for CI/CD</li> <li>Codecov for code coverage reporting</li> </ul>"},{"location":"#sprint-1-deliverables-rubric-aligned","title":"Sprint 1 Deliverables (Rubric-aligned)","text":"<ul> <li> User authentication (email, Google OAuth)</li> <li> Anonymous profile creation</li> <li> Responsive UI (Next.js + Tailwind CSS)</li> <li> Netlify deployment</li> </ul>"},{"location":"#privacy-safety-moderation","title":"Privacy, Safety &amp; Moderation","text":"<ul> <li>No personal info shared between users</li> <li>All messages are text-only, no media</li> <li>Moderation tools for reporting/blocking</li> <li>Data stored securely in Firebase</li> <li>Users can delete their account at any time</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<ol> <li>Fork the repo and clone locally</li> <li>Create a new branch (<code>git checkout -b feature/my-feature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add feature'</code>)</li> <li>Push to GitHub and open a Pull Request</li> </ol> <p>See CONTRIBUTING.md for more details.</p>"},{"location":"#contact-support","title":"Contact &amp; Support","text":"<ul> <li>Issues: GitHub Issues</li> <li>Email: pontshotau09@gmail.com</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See <code>LICENSE</code> for details.</p>"},{"location":"#mkdocs-quick-reference","title":"MkDocs Quick Reference","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#useful-commands","title":"Useful Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<p>``` mkdocs.yml    # The configuration file. docs/     index.md  # The documentation homepage.     ...       # Other markdown pages, images and other</p>"}]}